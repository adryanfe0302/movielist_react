{"version":3,"sources":["component/Home.tsx","component/Detail.tsx","App.js","reportWebVitals.ts","index.tsx"],"names":["RangePicker","DatePicker","Home","useState","listmovies","setListMovies","listmoviesShow","setListMoviesShow","loading","setLoading","options","setOptions","antIcon","LoadingOutlined","style","fontSize","spin","Cards","React","lazy","filterOptions","arr","listdropdownmovie","forEach","item","obj","value","title","label","push","useEffect","axios","get","then","res","data","err","getListMovies","className","span","dropdownMatchSelectWidth","width","onSelect","filter","onSearch","length","filtered","toLowerCase","includes","Search","allowClear","placeholder","enterButton","showTime","format","onChange","dateString","startDate","endDate","rangetimeselected","moment","filterRangeTime","gutter","indicator","fallback","description","map","movie","id","Detail","history","useHistory","image","like","detail","setDetail","location","pathname","substr","getDetailMovie","onBack","subTitle","margin","cover","alt","src","LikeOutlined","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAOQA,EAAgBC,IAAhBD,YAmHOE,MAhHf,WACE,MAAoCC,mBAAkB,IAAtD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,mBAAkB,IAA9D,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA8BJ,oBAAkB,GAAhD,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAiB,IAA/C,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAAU,cAACC,EAAA,EAAD,CAAiBC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IACxDC,EAAQC,IAAMC,MAAK,kBAAM,iCACzBC,EAAgB,SAACC,GACrB,IAAIC,EAAgC,GACpCD,EAAIE,SAAQ,SAACC,GACX,IAAIC,EAAW,CACbC,MAAOF,EAAKG,MACZC,MAAOJ,EAAKG,OAEdL,EAAkBO,KAAKJ,MAEzBd,EAAWW,IAwDb,OAlBAQ,qBAAU,YACc,WACpB,IACErB,GAAW,GACXsB,IAAMC,IAAN,6DACGC,MAAK,SAAAC,GACN7B,EAAc6B,EAAIC,MAClB5B,EAAkB2B,EAAIC,MACtBf,EAAcc,EAAIC,MAClB1B,GAAW,MAEb,MAAM2B,KAIVC,KACC,IAGD,sBAAKC,UAAU,OAAf,UACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAKC,KAAM,EAAX,SACE,cAAC,IAAD,CACEC,yBAA0B,EAC1B1B,MAAO,CAAE2B,MAAO,OAChB/B,QAASA,EACTgC,SAlDW,SAAChB,GAChBnB,EAAkBH,EAAWuC,QAAO,SAACnB,GAAD,OAAgBA,EAAKG,QAAUD,OAkD/DkB,SA9De,SAAClB,GACpB,GAAqB,IAAjBA,EAAMmB,OACRtC,EAAkBH,OACb,CACL,IAAI0C,EAAW1C,EAAWuC,QAAO,SAACnB,GAChC,OAAOA,EAAKG,MAAMoB,cAAcC,SAAStB,EAAMqB,kBAEjD3B,EAAc0B,KAkDd,SAOE,cAAC,IAAMG,OAAP,CAAcC,YAAU,EAACC,YAAY,gBAAgBC,aAAW,QAGpE,cAAC,IAAD,CAAKb,KAAM,EAAX,SACE,cAACvC,EAAD,CACEqD,SAAU,CAAEC,OAAQ,SACpBA,OAAO,mBACPC,SA9CW,SAAC7B,EAAW8B,GACL,KAAlBA,EAAW,IAA+B,KAAlBA,EAAW,GACrCjD,EAAkBH,GAZE,SAACqD,EAAeC,GACtC,IAAIC,EAA4B,GAChCvD,EAAWmB,SAAQ,SAACC,GACdoC,IAAOpC,EAAK6B,WAAaI,GAAaG,IAAOpC,EAAK6B,WAAaK,GACjEC,EAAkB9B,KAAKL,MAG3BjB,EAAkBoD,GAShBE,CAFoBD,IAAOJ,EAAW,IACpBI,IAAOJ,EAAW,aA6CtC,uBACA,cAAC,IAAD,CAAKM,OAAQ,CAAC,GAAI,IAAlB,SACGtD,EACC,cAAC,IAAD,CAAM8B,UAAU,UAAUyB,UAAWnD,IACrC,cAAC,WAAD,CAAUoD,SAAU,aAApB,SAE8B,IAA1B1D,EAAeuC,OAAe,cAAC,IAAD,CAAOoB,aAAa,EAAO3B,UAAU,YAAehC,EAAe4D,KAAI,SAACC,GACpG,OAAO,cAAClD,EAAD,CAAOkD,MAAOA,GAAYA,EAAMC,WAM/C,cAAC,IAAD,Q,oCCjCSC,MA5Ef,WACI,IAAIC,EAAUC,cACd,EAA8BpE,oBAAkB,GAAhD,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,mBAAgB,CACxCwB,MAAO,GACP6C,MAAO,GACPC,KAAM,EACNpB,SAAU,GACVe,GAAI,KALR,mBAAOM,EAAP,KAAeC,EAAf,KAQM/D,EAAU,cAACC,EAAA,EAAD,CAAiBC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAiChE,OAJAc,qBAAU,YA3Be,WACnB,IACIrB,GAAW,GACX,IAAI2D,EAAYE,EAAQM,SAASC,SAASC,OAAO,GACjD/C,IAAMC,IAAN,oEAAuEoC,IACtEnC,MAAK,SAAAC,GACF,MAMIA,EAAIC,KALJiC,EADJ,EACIA,GACAI,EAFJ,EAEIA,MACA7C,EAHJ,EAGIA,MACA8C,EAJJ,EAIIA,KACApB,EALJ,EAKIA,SAEJ5C,GAAW,GACXkE,EAAU,CACNhD,MAAOA,EACP6C,MAAOA,EACPC,KAAMA,EACNpB,SAAUA,EACVe,GAAIA,OAGd,MAAMhC,KAMZ2C,KACC,IAGD,qCACA,cAAC,IAAD,UACI,cAAC,IAAD,CACAzC,UAAU,mBACV0C,OAAQ,kBAAMV,EAAQzC,KAAK,MAC3BF,MAAM,OACNsD,SAAUP,EAAO/C,UAIpBnB,EACG,cAAC,IAAD,CAAM8B,UAAU,UAAUyB,UAAWnD,IAEvC,eAAC,IAAD,CACAE,MAAO,CAAE2B,MAAO,MAAOyC,OAAQ,QAC/BC,MAAO,qBAAKC,IAAI,UAAUC,IAAKX,EAAOF,QAFtC,UAIE,mCAAME,EAAO/C,MAAb,OACA,cAAC,IAAD,IACA,eAAC,IAAD,CAAKY,KAAM,GAAX,UACKqB,IAAOc,EAAOrB,UAAUC,OAAO,sBAChC,uBAAMhB,UAAU,SAAhB,cAA0B,cAACgD,EAAA,EAAD,IAA1B,IAA2C,8BAAIZ,EAAOD,KAAX,oB,OCxDxCc,MAXf,WACE,OACE,mCACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxF,IACjC,cAAC,IAAD,CAAOsF,OAAK,EAACC,KAAK,cAAcC,UAAWrB,UCEtCsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5D,MAAK,YAAkD,IAA/C6D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.97a2ce0e.chunk.js","sourcesContent":["import React, { useEffect, useState, Suspense } from 'react';\nimport { Row, Col, Spin, AutoComplete, Input, DatePicker, Empty, BackTop } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport moment from 'moment'\nimport { movie, Iobj } from './../interface'\nconst { RangePicker } = DatePicker;\n\n\nfunction Home() {\n  const [listmovies, setListMovies] = useState<movie[]>([])\n  const [listmoviesShow, setListMoviesShow] = useState<movie[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [options, setOptions] = useState<Iobj[]>([])\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n  const Cards = React.lazy(() => import('./Cards'));\n  const filterOptions = (arr:movie[]) => {\n    let listdropdownmovie:Array<Iobj> = []\n    arr.forEach((item:any) => {\n      let obj:Iobj = {\n        value: item.title,\n        label: item.title\n      }\n      listdropdownmovie.push(obj)\n    })\n    setOptions(listdropdownmovie)\n  } \n\n  const handleSearch = (value: string) => {\n    if (value.length === 0) {\n      setListMoviesShow(listmovies)\n    } else {\n      let filtered = listmovies.filter((item:movie) => {\n        return item.title.toLowerCase().includes(value.toLowerCase())\n      })\n      filterOptions(filtered)\n    }\n  };\n\n  const onSelect = (value: string) => {\n    setListMoviesShow(listmovies.filter((item:movie) => item.title === value))\n  }\n\n  const filterRangeTime = (startDate:any, endDate:any) => {\n    let rangetimeselected:movie[] = []\n    listmovies.forEach((item:movie) => {\n      if (moment(item.showTime) >= startDate && moment(item.showTime) <= endDate ){\n        rangetimeselected.push(item)\n      }\n    })\n    setListMoviesShow(rangetimeselected)\n  }\n\n  const onChange = (value:any, dateString:any) => {\n    if (dateString[0] === '' && dateString[1] === '') {\n      setListMoviesShow(listmovies)\n    } else {\n      let startDate:any = moment(dateString[0])\n      let endDate:any = moment(dateString[1])\n      filterRangeTime(startDate, endDate)\n    }\n  }\n\n  useEffect(() => {\n    const getListMovies = () => {\n      try {\n        setLoading(true)\n        axios.get(`https://5f50ca542b5a260016e8bfb0.mockapi.io/api/v1/movies`)\n          .then(res => {\n          setListMovies(res.data)\n          setListMoviesShow(res.data)\n          filterOptions(res.data)\n          setLoading(false)\n          })\n      } catch(err){\n        // err goes here\n      }\n    }\n    getListMovies()\n  }, [])\n\n  return (\n    <div className=\"pd-5\"> \n    <Row>\n    <Col span={8}> \n      <AutoComplete\n        dropdownMatchSelectWidth={1}\n        style={{ width: '90%' }}\n        options={options}\n        onSelect={onSelect}\n        onSearch={handleSearch}\n      >\n        <Input.Search allowClear placeholder=\"search movies\" enterButton />\n      </AutoComplete>\n    </Col>  \n    <Col span={8}> \n      <RangePicker\n        showTime={{ format: 'HH:mm' }}\n        format=\"YYYY-MM-DD HH:mm\"\n        onChange={onChange}\n      />\n    </Col>\n    </Row>\n    <br />\n    <Row gutter={[16, 24]}>\n      {loading ? \n        <Spin className='spinner' indicator={antIcon} /> :\n        <Suspense fallback={'loading...'}> \n          {\n            listmoviesShow.length === 0 ? <Empty description={false} className='spinner' /> : listmoviesShow.map((movie:movie) => {\n              return <Cards movie={movie} key={movie.id}></Cards>\n            })\n          }\n        </Suspense>\n      }\n      </Row>\n      <BackTop />\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\nimport moment from 'moment'\nimport { PageHeader, Row, Card, Col, Spin, Divider } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { useEffect , useState} from \"react\";\nimport { LoadingOutlined, LikeOutlined } from '@ant-design/icons';\nimport { movie } from './../interface'\n\nfunction Detail() {\n    let history = useHistory();\n    const [loading, setLoading] = useState<boolean>(false)\n    const [detail, setDetail] = useState<movie>({\n        title: '',\n        image: '',\n        like: 0,\n        showTime: '',\n        id: ''\n    })\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    const getDetailMovie = () => {\n        try {\n            setLoading(true)\n            let id:string = history.location.pathname.substr(8)\n            axios.get(`https://5f50ca542b5a260016e8bfb0.mockapi.io/api/v1/movies/${id}`)\n            .then(res => {\n                let {\n                    id,\n                    image,\n                    title,\n                    like,\n                    showTime\n                } = res.data\n                setLoading(false)\n                setDetail({\n                    title: title,\n                    image: image,\n                    like: like,\n                    showTime: showTime,\n                    id: id\n                })\n            })\n        } catch(err){\n            // err goes here\n        }\n    }\n\n  useEffect(() => {\n    getDetailMovie()\n  }, [])// eslint-disable-line react-hooks/exhaustive-deps\n  \n  return (\n    <>\n    <Row> \n        <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/')}\n        title='Back'\n        subTitle={detail.title}\n      />\n    </Row>\n    \n    {loading ? \n        <Spin className='spinner' indicator={antIcon} />\n      :\n      <Card\n      style={{ width: '50%', margin: 'auto' }}\n      cover={<img alt=\"example\" src={detail.image} />}\n        >\n        <h1> {detail.title} </h1>\n        <Divider />\n        <Col span={24}> \n            {moment(detail.showTime).format('DD MMM YYYY h:mm A')}\n            <span className='fright'> <LikeOutlined /> <b>{detail.like} </b></span>\n        </Col>\n        \n      </Card>\n    }\n   \n    </>\n  );\n}\n\nexport default Detail;\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './component/Home'\nimport Detail from './component/Detail'\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  return (\n    <>\n        <Router>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/detail/:id' component={Detail} />\n        </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}